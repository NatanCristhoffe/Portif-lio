<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./css/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap">
    <link
    href="https://fonts.googleapis.com/css2?family=Montserrat:wght@900&family=Open+Sans:ital,wght@0,400;0,700;1,400&display=swap"
    rel="stylesheet">
    <title>PORTIFOLIO NATAN</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

</head>
<body class="main-bg">
    <aside class="menu white-bg">
        <div class="main-content menu-content">
            <h1>
                <a href="#portifolio">PORTIFOLIO</a></h1>
            <nav>
                <ul>
                    <li><a href="#agenda">Agenda</a></li>
                    <li><a href="#codigos-python">Automoções Desenvolvidas</a></li>
                    <li><a href="#">Início</a></li>
                </ul>
            </nav>
        </div>
    </aside>
    <div class=" menu-espaco"></div>
    <section id="portifolio" class="portifolio main-bg section">
        <div class="main-content intro-content">
        <div class="intro-text-content">
        <h2>OI, EU SOU O NATAN,</h2><h3>PYTHON | JAVASCRIPT
            <a id="botoes" href="https://github.com/NatanCristhoffe" class="bi bi-github"></a>
            <a id="botoes" href="https://www.linkedin.com/in/natan-cristhoffe-425532280/" class="bi bi-linkedin"></a>
            <a id="botoes" href="https://drive.google.com/file/d/1ThJ_8KjseHKJVPOK-c_b-yd1LX3OcrSB/view" class="bi bi-file-earmark-richtext-fill"></a></h3>   
            <h4>DEVELOPER</h4>
        <P class="descricao">
            Python | Framework Django | JavaScript | Node.JS <br>AWS(Iniciante) | Git+GitHub | Excel | MySQL.<br><br> Busco minha primeira oportunidade na área de TI, com vontade de aprender<br>e contribuir em um ambiente dinâmico. Estou pronto para aplicar meus<br> conhecimentos e crescer profissionalmente.</P>
        </div>
        <div class="intro-img">
            <img src="./imgs/python.svg" alt="foto de um programador">
        </div>
        </div>
    </section>


    <section id="agenda" class="white-bg section">
        <div class="grid">
            <h2>Projetos Desenvolvidos</h2>
            <h2>PROJETO AGENDA DE CONTATOS</h2>
            <p class="projeto-descricao">Este projeto foi implementado utilizando o framework Django do Python. Através dele, é possível criar e gerenciar perfis de usuários, bem como cadastrar contatos contendo informações como telefone, e-mail, e outros dados relevantes.<br>

                No escopo deste projeto, foi estabelecida a restrição de que somente o usuário proprietário do perfil poderá atualizar ou excluir os contatos associados a ele. Caso um usuário verifique a existência de um contato criado por outro usuário, terá permissão apenas para visualizar os dados do contato, sem a possibilidade de efetuar alterações.</p>
            <div class="img-projeto">
                <article>
                    <h6>Página Inicial da Agenda</h6>
                <img src="./imgs/agenda1.png" alt="projeto agenda" class="img-projeto">
                </article>
                <article>
                    <h6>USUÁRIO CRIADO</h6>
                <img src="./imgs/Agenda2.png" alt="projeto agenda 2" class="img-projeto">
                </article>
            </div>
        </div>
    </section>

    <section id="codigos-python" class="main-bg section">
        <div class="main-content codigo-content">
            <h2 class="codigo-title" id="codigos-python">Códigos Python</h2>
            <p class="codigos-python">A seguir, apresento alguns projetos de automação que desenvolvi utilizando a linguagem Python. O primeiro projeto utiliza a biblioteca Selenium para automatizar o envio de mensagens no WhatsApp. Este projeto foi desenvolvido durante meu período de serviço no Exército Brasileiro. Embora seja simples, trouxe uma economia significativa de tempo, reduzindo o tempo necessário para enviar mensagens a todos os jovens que faltaram à sua apresentação em 2 horas e 30 minutos. Além disso, foi adicionada a funcionalidade de enviar mensagens para os jovens com apresentação marcada para o dia seguinte, algo que não era realizado anteriormente.<br></p>

                <p class="codigos-python">O segundo projeto utiliza o PyAutoGUI para automatizar o cadastro de produtos. Ele é responsável por executar todo o processo de cadastro de um produto de forma autônoma, desde a abertura do navegador até o preenchimento de cada campo com as informações corretas.</p>
            <div class="codigo-container"> 
                <div class="codigo">
                    <pre>
                        <code class="python">
Projeto WhatsApp

# Importando os módulos necessários
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from datetime import datetime, timedelta
import time
import urllib
import pandas as pd


# Instalando e configurando o driver do Chrome
servico = Service(ChromeDriverManager().install())
navegador = webdriver.Chrome(service=servico)


# Obtendo a data atual e a data de amanhã
data_atual = datetime.now().date()
data_amanha = data_atual + timedelta(days=1)
data_atualizada = data_amanha.strftime('%d%m%Y')
data_msg_falta = data_atual.strftime('%d-%m-%Y')
data_msg_apr = data_amanha.strftime('%d-%m-%Y')


# Função para enviar mensagens pelo WhatsApp

def whatsapp():
    navegador.get('https://web.whatsapp.com/')
    while len(navegador.find_elements(By.ID, 'pane-side')) < 1:
        time.sleep(1)
    for i, mensagem in enumerate(df['Mensagem']):
        pessoa = df.loc[i, 'Nome']
        numero = df.loc[i, 'Telefone']
        texto = urllib.parse.quote(f'Olá {pessoa}. {mensagem}')
        link = f'https://web.whatsapp.com/send?phone={numero}&text={texto}'
        navegador.get(link)
        while len(navegador.find_elements(By.XPATH, '//*[@id="main"]/footer/div[1]/div/span[2]/div/div[2]/div[1]/div')) < 1:
            time.sleep(1)
        navegador.find_element(
            By.XPATH, '//*[@id="main"]/footer/div[1]/div/span[2]/div/div[2]/div[1]/div/div[1]/p').send_keys(Keys.ENTER)
        time.sleep(10)




# Loop principal
while True:
    contatos_df = pd.read_excel("wpp_cs.xlsx")
    colunas = ['Nome', 'Telefone', 'Mensagem']
    df = pd.DataFrame(data=contatos_df, columns=colunas)


    # Solicitando informações sobre o tipo de mensagem a ser enviada
    mensagens = input(
        'Você está enviando as mensagens a conscritos\n "Faltosos" ou "Dentro do prazo"? --> ')


    if mensagens == "Dentro do prazo":
        periodo = input(
            'Qual o período da apresentação do conscrito?\n"Manhã" ou "Tarde"')


    # Verificando a escolha do usuário e definindo a mensagem correspondente
    if mensagens == "Faltosos":
        df['Mensagem'] = f'''


MENSAGEM DESTINADAS AOS JOVENS FALTOSOS!'''


    elif mensagens == "Dentro do prazo" and periodo == "Manhã":
        df['Mensagem'] = f'''


MENSAGEM DESTINADA AOS JOVENS DENTRO DO PRAZO NO PERIODO DA MANHÃ!
'''
    elif mensagens == "Dentro do prazo" and periodo == "Tarde":
        df['Mensagem'] = f'''


MENSAGEM DESTINADA AOS JOVENS DENTRO DO PRAZO NO PERIODO DA TARDE! '''


    else:
        print("ERRO! Escolha uma das duas opções")
        print("\n")
        print("\n")
        continue
    # Imprimindo o DataFrame com as mensagens
    print(df)


    # Chamando a função para enviar as mensagens pelo WhatsApp
    whatsapp()
    # Finalizando o loop
    break


# Mensagem de conclusão
print("Mensagens enviadas com sucesso!!")
                            
                        </code>
                    </pre>
                </div>
                <div class="codigo">
                    <pre>
                        <code class="Pyautogui">
Projeto PyAutoGUI

import pyautogui
import time
import pandas

pyautogui.PAUSE = 0.5
link = "https://dlp.hashtagtreinamentos.com/python/intensivao/login"

#Pressione a tecla windowns
pyautogui.press("win")

#escreva o nome "chrome"
pyautogui.write("chrome")

#Pressione enter
pyautogui.press("enter")

#Escreva o link
pyautogui.write(link)

#Pressione enter
pyautogui.press("enter")

#Espere 5 segundos
time.sleep(5)

#login
pyautogui.click(x=1748, y=377)

#Digitar email

pyautogui.write("natan.teste@hotmail.com")

#Indo para a senha
pyautogui.press("tab")

#escrevendo senha
pyautogui.write("teste123")

#click no botao logar
pyautogui.click(x=1908, y=531)

#Espere 5 segundos
time.sleep(5)

#importar a base de dados
tabela = pandas.read_csv("produtos.csv")
print(tabela)


for linha in tabela.index:
#click no botao logar
pyautogui.click(x=1762, y=259)

#codigo produto
pyautogui.write(tabela.loc[linha,"codigo"])
pyautogui.press("tab")

#Marca
pyautogui.write(tabela.loc[linha,"marca"])
pyautogui.press("tab")

#Tipo
pyautogui.write(tabela.loc[linha,"tipo"])
pyautogui.press("tab")

#Categoria
pyautogui.write(str(tabela.loc[linha,"categoria"]))
pyautogui.press("tab")

#preco
pyautogui.write(str(tabela.loc[linha,"preco_unitario"]))
pyautogui.press("tab")

#custo
pyautogui.write(str(tabela.loc[linha,"custo"]))
pyautogui.press("tab")

#obs
obs = tabela.loc[linha,"obs"]
if not pandas.isna(obs):
    pyautogui.write(obs)
else:
    pyautogui.press("tab")
    pyautogui.press("enter")

pyautogui.press("enter")
                        </code>
                    </pre>
                </div>
            </div>
        </div>
</section>

    <footer id= "footer" class="footer white-bg">
        <p><a href="https://web.whatsapp.com/send?phone={41998141045}&text=Olá Natan">Feito com <span class="coracao">♥</span> por Natan Cristhoffe.<br>
        Clique aqui para entrar em contato via whatsapp.</a></p>
    </footer>
</body>
</html>